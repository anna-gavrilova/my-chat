{"ast":null,"code":"import _classCallCheck from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anna_gavrilova/my-chat/src/components/home/ChatList.js\";\nimport React, { Component } from 'react';\nimport { _user as UserService } from '../App';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nvar ChatList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatList, _Component);\n\n  function ChatList(props) {\n    var _this;\n\n    _classCallCheck(this, ChatList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatList).call(this, props));\n\n    _this.handleclick = function (e, chat) {\n      _this.props.selectChat(chat.id);\n\n      _this.setState({\n        renderedChats: _this.renderChats(chat.id)\n      });\n    };\n\n    _this.state = {\n      chats: null,\n      renderedChats: [],\n      selectedChat: _this.props.selectedChat\n    };\n    return _this;\n  }\n\n  _createClass(ChatList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      UserService.getChats().then(function (resp) {\n        _this2.setState({\n          chats: resp.data.docs\n        });\n\n        _this2.props.subscribeRooms(resp.data.docs);\n      }).then(function (_) {\n        _this2.setState({\n          renderedChats: _this2.renderChats()\n        });\n      });\n    }\n  }, {\n    key: \"renderChats\",\n    value: function renderChats(selected) {\n      var _this3 = this;\n\n      var chats = [];\n      chats = this.state.chats.map(function (chat) {\n        console.log(_this3.props.selectedChat);\n        return React.createElement(\"div\", {\n          key: chat.id,\n          chat: chat.id,\n          className: selected == chat.id ? 'selected' : 'not-selected',\n          onClick: function onClick(e) {\n            return _this3.handleclick(e, chat);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: chat.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        })));\n      });\n      console.log(chats);\n      return chats;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chatList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.renderedChats));\n    }\n  }]);\n\n  return ChatList;\n}(Component);\n\nexport default ChatList;","map":{"version":3,"sources":["/Users/anna_gavrilova/my-chat/src/components/home/ChatList.js"],"names":["React","Component","_user","UserService","List","ListItem","ListItemText","ChatList","props","handleclick","e","chat","selectChat","id","setState","renderedChats","renderChats","state","chats","selectedChat","getChats","then","resp","data","docs","subscribeRooms","_","selected","map","console","log","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAK,IAAIC,WAAjB,QAAmC,QAAnC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;IAMMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;;AADc,UAyBlBC,WAzBkB,GAyBN,UAACC,CAAD,EAAGC,IAAH,EAAU;AAElB,YAAKH,KAAL,CAAWI,UAAX,CAAsBD,IAAI,CAACE,EAA3B;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAAC,MAAKC,WAAL,CAAiBL,IAAI,CAACE,EAAtB;AAAf,OAAd;AAGH,KA/BiB;;AAEd,UAAKI,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,IADC;AAEPH,MAAAA,aAAa,EAAC,EAFP;AAGPI,MAAAA,YAAY,EAAC,MAAKX,KAAL,CAAWW;AAHjB,KAAX;AAFc;AAQjB;;;;yCAMmB;AAAA;;AAChBhB,MAAAA,WAAW,CAACiB,QAAZ,GACCC,IADD,CACM,UAAAC,IAAI,EAAE;AACR,QAAA,MAAI,CAACR,QAAL,CAAc;AAACI,UAAAA,KAAK,EAACI,IAAI,CAACC,IAAL,CAAUC;AAAjB,SAAd;;AACA,QAAA,MAAI,CAAChB,KAAL,CAAWiB,cAAX,CAA0BH,IAAI,CAACC,IAAL,CAAUC,IAApC;AACH,OAJD,EAIGH,IAJH,CAIQ,UAAAK,CAAC,EAAE;AACP,QAAA,MAAI,CAACZ,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAC,MAAI,CAACC,WAAL;AAAf,SAAd;AACH,OAND;AAQH;;;gCAWWW,Q,EAAS;AAAA;;AACjB,UAAIT,KAAK,GAAC,EAAV;AACAA,MAAAA,KAAK,GAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqB,UAACjB,IAAD,EAAQ;AAChCkB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACtB,KAAL,CAAWW,YAAvB;AACA,eAAS;AAAM,UAAA,GAAG,EAAER,IAAI,CAACE,EAAhB;AAAoB,UAAA,IAAI,EAAEF,IAAI,CAACE,EAA/B;AAAmC,UAAA,SAAS,EAAEc,QAAQ,IAAEhB,IAAI,CAACE,EAAf,GAAkB,UAAlB,GAA6B,cAA3E;AAA2F,UAAA,OAAO,EAAE,iBAACH,CAAD;AAAA,mBAAK,MAAI,CAACD,WAAL,CAAiBC,CAAjB,EAAmBC,IAAnB,CAAL;AAAA,WAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACT,oBAAC,QAAD;AAAW,UAAA,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEA,IAAI,CAACoB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADS,CAAT;AAKH,OAPM,CAAP;AAQAF,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,aAAOA,KAAP;AACH;;;6BAEO;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWF,aADhB,CADJ,CADJ;AAQH;;;;EA3DkBd,S;;AA8DvB,eAAeM,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport {_user as UserService} from '../App'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\n\n\n\nclass ChatList extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            chats:null,\n            renderedChats:[],\n            selectedChat:this.props.selectedChat\n        };\n\n    }\n\n\n\n\n    \n    componentWillMount(){\n        UserService.getChats()\n        .then(resp=>{\n            this.setState({chats:resp.data.docs})\n            this.props.subscribeRooms(resp.data.docs)\n        }).then(_=>{\n            this.setState({renderedChats:this.renderChats()})\n        })\n\n    }\n\n    handleclick=(e,chat)=>{\n        \n        this.props.selectChat(chat.id);\n        this.setState({renderedChats:this.renderChats(chat.id)})\n       \n        \n    }\n\n\n    renderChats(selected){\n        var chats=[];\n        chats= this.state.chats.map((chat)=>{\n            console.log(this.props.selectedChat)\n            return   <div  key={chat.id} chat={chat.id} className={selected==chat.id?'selected':'not-selected'} onClick={(e)=>this.handleclick(e,chat)}>\n            <ListItem  button>\n                <ListItemText primary={chat.name}/>\n            </ListItem>\n            </div>\n        })\n        console.log(chats)\n        return chats\n    }\n\n    render(){\n        return(\n            <div className='chatList'>\n                <List component=\"nav\">\n                    {this.state.renderedChats}\n                </List>\n            </div>\n        )\n\n    }\n}\n\nexport default ChatList;"]},"metadata":{},"sourceType":"module"}