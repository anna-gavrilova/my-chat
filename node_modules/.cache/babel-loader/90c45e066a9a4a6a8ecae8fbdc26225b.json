{"ast":null,"code":"import _classCallCheck from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anna_gavrilova/my-chat/src/components/home/Home.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ChatList from './ChatList';\nimport ChatWindow from './ChatWindow';\nimport './Home.css';\nimport { _conv as ConvService } from '../App';\nimport { socket } from '../App';\nimport openSocket from \"socket.io-client\";\n\nvar _ = require('underscore');\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      user: _this.props.user,\n      selectedChat: null,\n      chatHistory: null,\n      newmessages: null,\n      newmessagetrigger: true\n    };\n    _this.selectChat = _this.selectChat.bind(_assertThisInitialized(_this));\n    _this.subscribeRooms = _this.subscribeRooms.bind(_assertThisInitialized(_this));\n    _this.getMessages = _this.getMessages.bind(_assertThisInitialized(_this));\n    console.log(socket);\n\n    if (socket.disconnected) {\n      socket.connect();\n    }\n\n    console.log(socket.disconnected);\n    socket.on('message', function (messageData) {\n      if (_this.state.selectedChat == messageData.room) {\n        _this.getMessages(messageData.room);\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.chatSelected) {\n        this.selectChat(this.props.chatSelected);\n      }\n    }\n  }, {\n    key: \"selectChat\",\n    value: function selectChat(id) {\n      this.setState({\n        selectedChat: id\n      });\n      this.getMessages(id);\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages(id) {\n      var _this2 = this;\n\n      ConvService.retrieveMessages(id).then(function (messages) {\n        _this2.setState({\n          chatHistory: messages.data.docs\n        });\n      });\n    }\n  }, {\n    key: \"subscribeRooms\",\n    value: function subscribeRooms(rooms) {\n      var _this3 = this;\n\n      _.pluck(rooms, \"id\").forEach(function (room) {\n        socket.emit('goOnline', {\n          sender: _this3.state.user.id,\n          room: room\n        });\n      });\n\n      this.setState({\n        rooms: rooms\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isChatSelected = this.state.selectedChat ? React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 9,\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ChatWindow, {\n        selectedChat: this.state.selectedChat,\n        chatHistory: this.state.chatHistory,\n        className: \"chatList\",\n        user: this.props.user,\n        newmessages: this.state.newmessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })) : this.state.rooms && this.state.rooms.length ? React.createElement(\"div\", {\n        className: \"noInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Select chat from the left \") : React.createElement(\"div\", {\n        className: \"noInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" You don't have any chats. Find a friend!\");\n      return React.createElement(\"div\", {\n        className: \"homeWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        className: \"wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        className: \"chatList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ChatList, {\n        selectChat: this.selectChat,\n        selectedChat: this.state.selectedChat,\n        subscribeRooms: this.subscribeRooms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), isChatSelected));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/anna_gavrilova/my-chat/src/components/home/Home.js"],"names":["React","Component","Grid","ChatList","ChatWindow","_conv","ConvService","socket","openSocket","_","require","Home","props","state","user","selectedChat","chatHistory","newmessages","newmessagetrigger","selectChat","bind","subscribeRooms","getMessages","console","log","disconnected","connect","on","messageData","room","chatSelected","id","setState","retrieveMessages","then","messages","data","docs","rooms","pluck","forEach","emit","sender","isChatSelected","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport ChatList from './ChatList'\nimport ChatWindow from './ChatWindow'\nimport './Home.css';\nimport {_conv as ConvService} from '../App'\nimport {socket} from '../App'\nimport openSocket from \"socket.io-client\"\nconst _=require('underscore')\n\nclass Home extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            user:this.props.user,\n            selectedChat:null,\n            chatHistory:null,\n            newmessages:null,\n            newmessagetrigger:true\n        }\n\n\n\n        this.selectChat=this.selectChat.bind(this)\n        this.subscribeRooms=this.subscribeRooms.bind(this)\n        this.getMessages=this.getMessages.bind(this)\n\n       console.log(socket)\n       if(socket.disconnected){\n           socket.connect()\n       }\n       console.log(socket.disconnected)\n        socket.on('message',messageData=>{\n            if(this.state.selectedChat==messageData.room){\n                this.getMessages(messageData.room)\n            }\n        \n        })\n    }\n\n    \n\n \n\n    componentDidMount(){\n        if(this.props.chatSelected){\n            this.selectChat(this.props.chatSelected)\n        }\n    }\n    selectChat(id){\n        \n        this.setState({\n            selectedChat:id\n        })\n\n        this.getMessages(id)\n    }\n\n    getMessages(id){\n        ConvService.retrieveMessages(id)\n        .then(messages=>{\n            this.setState({\n                chatHistory:messages.data.docs\n            })\n        })\n    }\n\n    subscribeRooms(rooms){\n        _.pluck(rooms,\"id\").forEach(room=>{\n            socket.emit('goOnline',{sender:this.state.user.id,room:room})\n        })\n\n        this.setState({rooms:rooms})\n    }\n\n\n\n\n    render(){\n\n        var isChatSelected=this.state.selectedChat?\n        <Grid item xs={12} sm={9} className='wrap'><ChatWindow selectedChat={this.state.selectedChat} chatHistory={this.state.chatHistory} className='chatList' user={this.props.user} newmessages={this.state.newmessages}/></Grid>:\n        (this.state.rooms&&this.state.rooms.length?<div className=\"noInfo\">Select chat from the left </div>:\n                        <div className=\"noInfo\"> You don't have any chats. Find a friend!</div>)\n        return(\n            <div className=\"homeWrapper\">\n                 <Grid container spacing={0} className='wrap'>\n                    <Grid item xs={12} sm={3} className='chatList'><ChatList  selectChat={this.selectChat} selectedChat={this.state.selectedChat} subscribeRooms={this.subscribeRooms}/></Grid>\n                    {isChatSelected}\n                    \n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}