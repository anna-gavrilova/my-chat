{"ast":null,"code":"import _classCallCheck from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anna_gavrilova/my-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anna_gavrilova/my-chat/src/components/search/Search.js\";\nimport React, { Component } from 'react';\nimport ChatList from '../home/ChatList';\nimport ChatWindow from '../home/ChatWindow';\nimport '../home/Home';\nimport './Search.css';\nimport { Button } from 'reactstrap';\nimport { _user as UserService } from '../App';\nimport { _conv as ConvService } from '../App';\nimport { socket } from '../App';\nimport { Container, Row, Col } from 'reactstrap';\nimport { BrowserRouter, Link, Route, Redirect, Switch } from 'react-router-dom';\nimport { FaComment } from 'react-icons/fa';\n\nvar _ = require('underscore');\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.search = function (e) {\n      UserService.findUsers(e.target.value).then(function (response) {\n        if (response.data.docs.length !== 0 && e) {\n          _this.setState({\n            searchResults: React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, _this.generate(response.data.docs))\n          });\n        } else _this.setState({\n          searchResults: React.createElement(\"div\", {\n            className: \"notFound\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"No Users Found :(\")\n        });\n      });\n    };\n\n    _this.state = {\n      searchResults: null\n    };\n    _this.results = null;\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"startConversation\",\n    value: function startConversation(id) {\n      //TODO:\n      //check if the conversation already exists\n      //if not, create a new record for the chat\n      ConvService.startChat(UserService.user, id).then(function (res) {\n        if (res.data.success) {\n          socket.emit('newChat', {\n            name: res.data.docs.name,\n            sender: UserService.user\n          });\n        }\n      }); //redirect to home page with all the parameters selected for that chat\n      //eg selected chat, chat history, all that\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(data) {\n      var _this2 = this;\n\n      return _.map(data, function (user, key) {\n        return React.createElement(Row, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, user.name), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this2.startConversation(user.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(FaComment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"searchWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(event) {\n          if (event.target.value !== '') _this3.search(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"searchResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.searchResults)));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/anna_gavrilova/my-chat/src/components/search/Search.js"],"names":["React","Component","ChatList","ChatWindow","Button","_user","UserService","_conv","ConvService","socket","Container","Row","Col","BrowserRouter","Link","Route","Redirect","Switch","FaComment","_","require","Search","props","search","e","findUsers","target","value","then","response","data","docs","length","setState","searchResults","generate","state","results","id","startChat","user","res","success","emit","name","sender","map","key","startConversation","event"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAO,cAAP;AACA,OAAO,cAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAAQC,KAAK,IAAIC,WAAjB,QAAmC,QAAnC;AACA,SAAQC,KAAK,IAAIC,WAAjB,QAAmC,QAAnC;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAAQC,aAAR,EAAsBC,IAAtB,EAA2BC,KAA3B,EAAiCC,QAAjC,EAA0CC,MAA1C,QAAuD,kBAAvD;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AACA,IAAMC,CAAC,GAACC,OAAO,CAAC,YAAD,CAAf;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,gFAAMA,KAAN;;AADc,UAsBlBC,MAtBkB,GAsBX,UAACC,CAAD,EAAK;AAERlB,MAAAA,WAAW,CAACmB,SAAZ,CAAsBD,CAAC,CAACE,MAAF,CAASC,KAA/B,EACKC,IADL,CACU,UAAAC,QAAQ,EAAE;AACZ,YAAGA,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,MAAnB,KAA4B,CAA5B,IAAiCR,CAApC,EAAsC;AAElC,gBAAKS,QAAL,CAAc;AACVC,YAAAA,aAAa,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM,MAAKC,QAAL,CAAcN,QAAQ,CAACC,IAAT,CAAcC,IAA5B,CAAN;AADJ,WAAd;AAGH,SALD,MAMK,MAAKE,QAAL,CAAc;AACfC,UAAAA,aAAa,EAAE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,SAAd;AAGR,OAXL;AAYH,KApCiB;;AAEd,UAAKE,KAAL,GAAW;AACPF,MAAAA,aAAa,EAAC;AADP,KAAX;AAGA,UAAKG,OAAL,GAAa,IAAb;AALc;AAMjB;;;;sCAEiBC,E,EAAG;AACjB;AACA;AACA;AACA9B,MAAAA,WAAW,CAAC+B,SAAZ,CAAsBjC,WAAW,CAACkC,IAAlC,EAAuCF,EAAvC,EACSV,IADT,CACc,UAAAa,GAAG,EAAE;AACP,YAAGA,GAAG,CAACX,IAAJ,CAASY,OAAZ,EAAoB;AAChBjC,UAAAA,MAAM,CAACkC,IAAP,CAAY,SAAZ,EAAsB;AAACC,YAAAA,IAAI,EAACH,GAAG,CAACX,IAAJ,CAASC,IAAT,CAAca,IAApB;AAAyBC,YAAAA,MAAM,EAACvC,WAAW,CAACkC;AAA5C,WAAtB;AACH;AACJ,OALT,EAJiB,CAUjB;AACA;AACH;;;6BAkBQV,I,EAAK;AAAA;;AACV,aAAOX,CAAC,CAAC2B,GAAF,CAAMhB,IAAN,EAAW,UAACU,IAAD,EAAMO,GAAN,EAAY;AAC1B,eACA,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACAP,IAAI,CAACI,IADL,CADL,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAE;AAAA,mBAAI,MAAI,CAACI,iBAAL,CAAuBR,IAAI,CAACF,EAA5B,CAAJ;AAAA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxE,CADA,CAJJ,CADA;AASH,OAVM,CAAP;AAWH;;;6BAGO;AAAA;;AAKJ,aAAQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEJ;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,kBAACW,KAAD,EAAS;AAAC,cAAGA,KAAK,CAACvB,MAAN,CAAaC,KAAb,KAAqB,EAAxB,EAA4B,MAAI,CAACJ,MAAL,CAAY0B,KAAZ;AAAmB,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,EAGJ;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKb,KAAL,CAAWF,aADhB,CADA,CAHI,CAAR;AAYH;;;;EAxEgBjC,S;;AA2ErB,eAAeoB,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport ChatList from '../home/ChatList'\nimport ChatWindow from '../home/ChatWindow'\nimport '../home/Home';\nimport './Search.css'\nimport { Button } from 'reactstrap';\nimport {_user as UserService} from '../App'\nimport {_conv as ConvService} from '../App'\nimport {socket} from '../App'\nimport { Container, Row, Col } from 'reactstrap';\nimport {BrowserRouter,Link,Route,Redirect,Switch} from 'react-router-dom';\nimport { FaComment } from 'react-icons/fa';\nconst _=require('underscore')\n\nclass Search extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            searchResults:null\n        }\n        this.results=null;\n    }\n\n    startConversation(id){\n        //TODO:\n        //check if the conversation already exists\n        //if not, create a new record for the chat\n        ConvService.startChat(UserService.user,id)\n                .then(res=>{\n                    if(res.data.success){\n                        socket.emit('newChat',{name:res.data.docs.name,sender:UserService.user})\n                    }\n                })\n        //redirect to home page with all the parameters selected for that chat\n        //eg selected chat, chat history, all that\n    }\n\n    search=(e)=>{\n        \n        UserService.findUsers(e.target.value)\n            .then(response=>{\n                if(response.data.docs.length!==0 && e){\n                    \n                    this.setState({\n                        searchResults:<div>{this.generate(response.data.docs)}</div>\n                    })\n                }\n                else this.setState({\n                    searchResults:(<div className=\"notFound\">No Users Found :(</div>)\n                })\n            })\n    }\n\n    generate(data){\n        return _.map(data,(user,key)=>{\n            return (\n            <Row key={key}>\n                 <Col>\n                {user.name}\n                </Col>\n                <Col>\n                <Button color=\"secondary\" onClick={()=>this.startConversation(user.id)}><FaComment></FaComment></Button>\n                </Col>\n            </Row>)\n        })\n    }\n\n\n    render(){\n\n\n\n\n        return (<div className=\"searchWrap\">\n            \n            <input type=\"text\" onChange={(event)=>{if(event.target.value!=='') this.search(event)}}></input>\n            <div className=\"searchResults\">\n            <Container>\n                {this.state.searchResults}\n            </Container>\n            </div>\n\n\n\n        </div>)\n    }\n}\n\nexport default Search\n\n"]},"metadata":{},"sourceType":"module"}